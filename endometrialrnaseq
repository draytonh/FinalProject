## Set-up
#Download files: 
#Samples were selected from the NIH National Cancer Institute GDC Data Portal and were filtered for White and Black or African American race, not Hispanic or Latino ethnicity. The files were filtered to be from the TCGA-UCEC project, the disease type to be cystic, mucinous, or serous neoplasms (as these are clinically more severe malignancies), the experimental strategy as RNA-Seq, and the workflow type as HTSeq-Counts.

#Samples: African American (aa) n = 25, Caucasian (c) n = 50

#To download files, apply the filteres described above (or utilize the below url), go to each individual file name on the TCGA website, and select download. 

#https://portal.gdc.cancer.gov/repository?facetTab=cases&filters=%7B%22op%22%3A%22and%22%2C%22content%22%3A%5B%7B%22op%22%3A%22in%22%2C%22content%22%3A%7B%22field%22%3A%22cases.demographic.ethnicity%22%2C%22value%22%3A%5B%22not%20hispanic%20or%20latino%22%5D%7D%7D%2C%7B%22op%22%3A%22in%22%2C%22content%22%3A%7B%22field%22%3A%22cases.demographic.race%22%2C%22value%22%3A%5B%22black%20or%20african%20american%22%5D%7D%7D%2C%7B%22op%22%3A%22in%22%2C%22content%22%3A%7B%22field%22%3A%22cases.disease_type%22%2C%22value%22%3A%5B%22Cystic%2C%20Mucinous%20and%20Serous%20Neoplasms%22%5D%7D%7D%2C%7B%22op%22%3A%22in%22%2C%22content%22%3A%7B%22field%22%3A%22cases.project.project_id%22%2C%22value%22%3A%5B%22TCGA-UCEC%22%5D%7D%7D%2C%7B%22op%22%3A%22in%22%2C%22content%22%3A%7B%22field%22%3A%22files.analysis.workflow_type%22%2C%22value%22%3A%5B%22HTSeq%20-%20Counts%22%5D%7D%7D%2C%7B%22op%22%3A%22in%22%2C%22content%22%3A%7B%22field%22%3A%22files.experimental_strategy%22%2C%22value%22%3A%5B%22RNA-Seq%22%5D%7D%7D%5D%7D&searchTableTab=files

## Generate dataframe:
#readDGE is used to place the Ensembl name of each gene and the counts associated with it into a dataframe. 
library(limma)
library(Glimma)
library(edgeR)
library(Homo.sapiens)

workingdirectory <-("~/location of files") #Change to location where you have downloaded sample files
setwd(workingdirectory)
files <- c("5810334f-0f7b-4ab9-b2eb-326e8af7e147.htseq.counts", "6d60eab2-3b0a-4c35-9fc2-f4c8b7c5b894.htseq.counts", "65703426-dbb6-4591-ad7f-53663cc3aeae.htseq.counts", "33eb8dac-67ee-4ab4-bf70-e81dbec1bf29.htseq.counts", "ccdfb795-0b81-4050-b83e-cef9caf05713.htseq.counts", "a8187969-0610-479a-8d12-2c8e61c07a80.htseq.counts", "46c3ad7f-0a11-4283-98a1-5a81ce0a5f4f.htseq.counts", "d3392d40-4c1e-44cf-9a92-7c496641e2f6.htseq.counts", "14100499-dd37-452c-96bd-8aee7e0b9fcf.htseq.counts", "fc56bcfb-cda6-421a-847d-2adcaf6c5fa2.htseq.counts", "db7b7f18-8a34-466f-b93a-087309fd68b9.htseq.counts", "eab25d32-0d61-4ddf-9b9f-5f3a592d6f31.htseq.counts", "b775000b-5f07-4730-9b31-d4cab53309ab.htseq.counts", "82e164f3-ce5d-4226-b338-e3d7a4fd8807.htseq.counts", "1361dd18-8a88-428c-9576-d3a4a4265e68.htseq.counts", "61fd020e-b8a4-4214-b674-2dc6e3169510.htseq.counts", "a717b697-d2cc-4edb-9742-d976aae5beae.htseq.counts", "3fcc7b8e-9124-4840-b070-d0ae42d8e1dd.htseq.counts", "1d5dbeb9-9d9f-4d28-bd9d-273899c0c6aa.htseq.counts", "c04981bc-b64c-4a1f-a4ac-e7489932c834.htseq.counts", "403b1855-51e5-4136-8e76-17ceba12046d.htseq.counts", "01a18e55-cd8c-45be-929d-30fb27d9a252.htseq.counts", "4a0acc32-acf8-4720-b6c1-59fb6cdda3de.htseq.counts", "22000795-c497-4639-ac4d-689ed2589d5e.htseq.counts", "9a151f86-9a12-4035-98cf-db29417a5fd2.htseq.counts", "3ea4007b-d856-4b61-b5fd-b0df8a76674b.htseq.counts", "c3e569a6-ac60-471e-a438-0d08c733e3be.htseq.counts", "6764419f-5645-4106-b155-b1525a2c6b42.htseq.counts", "e9f65d45-a80f-41fa-b17a-bd53703c9b6a.htseq.counts", "67cfe653-e458-44cc-aa05-3e10e305b168.htseq.counts", "dc396277-cc20-4077-8ce7-229a61a92bd6.htseq.counts", "3b650844-9475-45c2-932d-6804ab8ea2ec.htseq.counts", "0011596d-cfa3-48f7-b182-b1e5765209fc.htseq.counts", "c0401b43-aca6-49ef-90fa-1d4ec7cc2c1d.htseq.counts", "97c0b9ba-e792-4e0c-af06-f6789ab37e40.htseq.counts", "eb8067e5-1e8b-4994-9a28-f512c20502d4.htseq.counts", "5fb027d6-37c1-4a46-b100-991a4a8c5984.htseq.counts", "6698a82c-ebeb-406f-bc7a-5afa09b29e11.htseq.counts", "b2697c28-f5f4-4af9-901a-c322f59e7aec.htseq.counts", "44f2c75c-1de9-4100-8a58-c4841fa03c20.htseq.counts", "9e0bba8c-ee44-41f6-8b09-7688fe4192a1.htseq.counts", "b7f1ca65-f09f-4eba-9e59-73d308266e0c.htseq.counts", "bd4fc579-105e-41c4-afe4-fd676f55977e.htseq.counts", "d6ea3f1d-9186-40c4-a51e-4d94d07ea663.htseq.counts", "18f37a89-0851-4c78-810c-1b92e98e880e.htseq.counts", "d9cbccff-ddfd-418d-a9f3-a705ab507277.htseq.counts", "57cd1c25-3305-4bc2-a946-e664a6e3eab1.htseq.counts", "59118944-d135-4b7d-8ce4-438fcaa4fcf4.htseq.counts", "e7a29167-b58f-4fec-9b5e-cfd6b7c922a9.htseq.counts", "b689bc2b-5e52-4244-afd3-499254cedeef.htseq.counts", "ef56f0c2-dae0-4aa0-9240-f8b2d2d1acad.htseq.counts", "a1749cd8-a737-48c6-ac4c-e2d6c2f8b23f.htseq.counts", "0620b847-eb91-4a7e-a743-0a6621b3d8c5.htseq.counts", "2fb6c010-daf7-4121-8eb0-b5b26e75e03f.htseq.counts", "4bf7c191-bbcb-4a92-bbf8-3e72db34f264.htseq.counts", "6d3a3b40-5634-48b6-8d31-927523d64ac8.htseq.counts", "1777294b-0012-4cfb-8749-d94f22b4ca75.htseq.counts", "65961154-aacc-4c6e-a87c-145c0b5ac55d.htseq.counts", "f3b6c5d9-6d0c-41db-b369-2b60bc2f44a6.htseq.counts", "6b1442d8-64b8-456a-b6ce-08c8f1fa9ce6.htseq.counts", "3dcd981c-dc04-40c8-8799-de094c55c4a2.htseq.counts", "c8640e96-2450-4a0f-a0f3-017f5ae9a3b9.htseq.counts", "65ae2ceb-dd35-4ff8-83f7-30e00589e425.htseq.counts", "b9c86d45-14b0-412d-aebf-ac2745e4af56.htseq.counts", "34cf0edc-ba30-466b-a52a-f9dd7f1b146f.htseq.counts", "ff1d5ef6-0f9d-408c-9feb-b03380c8ab9c.htseq.counts", "1c16cfc6-d8c0-44f8-bbaa-275cdd8dc87c.htseq.counts", "046e8909-9b5f-42f3-8bd3-e206dc70927c.htseq.counts", "ee78a147-24c8-4487-a112-b46974641796.htseq.counts", "abda9064-e5f9-4955-9996-1767755f7074.htseq.counts", "ed2f071b-b001-494b-a7c2-1cb19b9a479e.htseq.counts", "596e0340-9bb6-49eb-a926-f51f8ec9727d.htseq.counts", "41f3a303-50f4-4127-8f05-a1367a5606e6.htseq.counts", "eae8f6bd-f4f2-4c48-a828-21efa4afbf7f.htseq.counts", "39ff47a9-877b-43c5-9e73-46dab12bf4c4.htseq.counts") 
read.delim(files[1], nrow=5)
x <- readDGE(files, columns=c(1,2))
class(x)
dim(x)

## Organizing sample information
#Organize data based on race (African American (aa) or Caucasian (c)) and on age (broken into individuals under the age of 70 (LT70) and over the age of 70 (GT70)). 
#Ensembl gene names are matched to gene symbols and their chromosome location. In order to match Ensembl names to gene symbols a substitution is needed to get rid of the decimal and any trailing digits in the Ensembl name.
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
samplenames
colnames(x) <- samplenames
race <- as.factor(rep(c("aa","c"), c(25,50)))
x$samples$race <- race
age <- as.factor((c
x$samples$age <- age
x$samples
nodecimal <- gsub("\\..*","",rownames(x))
geneid <- nodecimal
genes <- select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"), 
                keytype="ENSEMBL")
head(genes)
genes <- genes[!duplicated(genes$ENSEMBL),]
x$genes <- genes
x

## Removing low expression genes
#Genes that are expressed at such a low level that they are insignificant are removed.
#Comparing the unfiltered vs. the filtered data, it is clear that a significant number of genes in the dataset are expressed at a low level and are removed.
#Both the raw and filtered data demonstrate that there are no samples that visibly separated from the rest of the dataset, a harbringer of a lack of there being statistical differences between samples.
cpm <- cpm(x)
lcpm <- cpm(x, log=TRUE)
L <- mean(x$samples$lib.size) * 1e-6
M <- median(x$samples$lib.size) * 1e-6
c(L, M)
summary(lcpm)
table(rowSums(x$counts==0)==9)
keep.exprs <- filterByExpr(x, race=race)
x <- x[keep.exprs,, keep.lib.sizes=FALSE]
dim(x)
lcpm.cutoff <- log2(10/M + 2/L)
library(RColorBrewer)
nsamples <- ncol(x)
col <- brewer.pal(nsamples, "Paired")
par(mfrow=c(1,2))
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.26), las=2, main="", xlab="")
title(main="A. Raw data", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
legend("topright", samplenames, text.col=col, bty="n")
lcpm <- cpm(x, log=TRUE)
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.26), las=2, main="", xlab="")
title(main="B. Filtered data", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
legend("topright", samplenames, text.col=col, bty="n")

## Normalization of sample data
#Data needs to be normalized to control for outside factors in order to compare across samples.
#The first two samples were significantly changed upon normalization, with the rest of the samples moved to a lesser degree.
x <- calcNormFactors(x, method = "TMM")
x$samples$norm.factors
x2 <- x
x2$samples$norm.factors <- 1
x2$counts[,1] <- ceiling(x2$counts[,1]*0.05)
x2$counts[,2] <- x2$counts[,2]*5
par(mfrow=c(1,2))
lcpm <- cpm(x2, log=TRUE)
boxplot(lcpm, las=2, col=col, main="")
title(main="A. Example: Unnormalised data",ylab="Log-cpm")
x2 <- calcNormFactors(x2)  
x2$samples$norm.factors
lcpm <- cpm(x2, log=TRUE)
boxplot(lcpm, las=2, col=col, main="")
title(main="B. Example: Normalised data",ylab="Log-cpm")

## Unsupervised Clustering
#Unsupervised clustering is run to look for any apparent grouping of samples which demonstrates similarities between those samples.  
#This demonstrates a wider spread of Caucsian (c) samples compared to African American (aa) samples. There is no evident separation based on age, however, making it less likely for there to be a large amount of differential expression when comparing these two groups.
lcpm <- cpm(x, log=TRUE)
par(mfrow=c(1,2))
col.race <- race
levels(col.race) <-  brewer.pal(nlevels(col.race), "Set1")
col.race <- as.character(col.race)
col.age <- age
levels(col.age) <-  brewer.pal(nlevels(col.age), "Set2")
col.age <- as.character(col.age)
plotMDS(lcpm, labels=race, col=col.age)
title(main="A. Race")
plotMDS(lcpm, labels=age, col=col.race, dim=c(3,4))
title(main="B. Age")
glMDSPlot(lcpm, labels=paste(race, age, sep="_"), 
          groups=x$samples[,c(2,5)], launch=TRUE)

## Creating a Control Matrix
#A design matrix is established with the race and age information for all samples. Pairwise comparisons are then constructed based on the matrix.
#Known Issue: Only has column for LT70. Data may need to be sorted differently to get the control matrix to include both LT70 and GT70
design <- model.matrix(~0+race+age)
colnames(design) <- gsub("age", "", colnames(design))
colnames(design) <- gsub("race", "", colnames(design))
design
contr.matrix <- makeContrasts(
   aavsc = aa - c,
   levels = colnames(design))
contr.matrix

## Remove Heteroscedascity from count data
#Linear modeling is performed with the voom function, which transforms raw count data to log-CPM values.
#The fact that the line becomes horizontal suggests high biological variance of the genes.
par(mfrow=c(1,2))
v <- voom(x, design, plot=TRUE)
v
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts=contr.matrix)
efit <- eBayes(vfit)
plotSA(efit, main="Final model: Mean-variance trend")

## Graphical Representation of Differential Expression
#Comparison of gene expression in African American (aa) vs. Caucasian (c) patients is rendeder with a mean-difference plot, demonstrating genes that are expressed signficantly higher or lower in African American patients compared to Caucasian patients.
et <- decideTests(efit)
summary(et)
write.fit(efit, file="results.txt")
aa.vs.c <- topTreat(efit, coef=1, n=Inf)
head(aa.vs.c)
plotMD(efit, column=1, status=et[,1], main=colnames(efit)[1], 
       xlim=c(-8,13))
glMDPlot(efit, coef=1, status=et, main=colnames(efit)[1],
         side.main="ENSEMBL", counts=lcpm, groups=race, launch=TRUE)

## Heat Map of Differential Expression
#The differential level of gene expression for the top 100 genes as determined by p-value (i.e. the greater the significance in the difference between a gene's expression in African American subjects vs. Caucasian subjects, the smaller the p-value).
#Red = expressed at higher levels, Blue = expressed at lower levels
#There is some distinction between genes more highly expressed in African Americans (aa) than Caucaisans (c), as seen by the relative clustering of red in African American samples
library(gplots)
aa.vs.c.topgenes <- aa.vs.c$ENSEMBL[1:100]
i <- which(v$genes$ENSEMBL %in% aa.vs.c.topgenes)
mycol <- colorpanel(1000,"blue","white","red")
heatmap(lcpm[i,], scale="row",
   labRow=v$genes$SYMBOL[i], labCol=race, 
   col=mycol, trace="none", density.info="none", 
   margin=c(8,6), lhei=c(2,10), dendrogram="column")
